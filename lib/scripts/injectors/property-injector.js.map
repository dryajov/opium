{"version":3,"sources":["scripts/injectors/property-injector.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;wBAMqB,aAAa;;;;;;;;;;IAOb,gBAAgB;YAAhB,gBAAgB;;WAAhB,gBAAgB;0BAAhB,gBAAgB;;+BAAhB,gBAAgB;;;eAAhB,gBAAgB;;;;;;;;;WAQ7B,gBAAC,GAAG,EAAE;AACV,UAAI,OAAO,8BATM,gBAAgB,wCASN,GAAG,CAAC,CAAC;;AAEhC,UAAI,CAAC,OAAO,EAAE;AACZ,eAAO,GAAG,CAAC,GAAG,CAAC;OAChB;;AAED,aAAO,CAAC,OAAO,CAAC,UAAC,MAAM,EAAK;AAC1B,YAAI,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;AAC/C,iBAAO,CAAC,KAAK,eAAa,MAAM,CAAC,IAAI,iCAA4B,GAAG,CAAC,IAAI,CAAG,CAAC;;AAE7E,iBAAO;SACR;;AAED,YAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACxB,iBAAO,CAAC,IAAI,eAAa,MAAM,CAAC,IAAI,gCAA2B,GAAG,CAAC,IAAI,CAAG,CAAC;SAC5E;;AAED,WAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;OACxC,CAAC,CAAC;;AAEH,aAAO,GAAG,CAAC,GAAG,CAAC;KAChB;;;SA9BkB,gBAAgB;;;qBAAhB,gBAAgB","file":"property-injector.js","sourcesContent":["/**\n * Created by dmitriy.ryajov on 6/27/15.\n *\n * Default injector implements property injection\n */\n\nimport Injector from '../injector';\n\n/**\n * This class will perform property injection, by matching\n * dependency names to property names. The property is expected\n * to be defined and set to null, otherwise no injection is performed.\n */\nexport default class PropertyInjector extends Injector {\n\n  /**\n   * Inject the dependency by calling dependency['property name'] = dep1;\n   *\n   * @param dep\n   * @returns {dep|*|Dependency.dep}\n   */\n  inject(dep) {\n    let allDeps = super.inject(dep);\n\n    if (!allDeps) {\n      return dep.dep;\n    }\n\n    allDeps.forEach((depDep) => {\n      if (typeof dep.dep[depDep.name] === 'undefined') {\n        console.error(`Property ${depDep.name} undefined in dependency ${dep.name}`);\n\n        return;\n      }\n\n      if (dep.dep[depDep.name]) {\n        console.warn(`Property ${depDep.name} not null in dependency ${dep.name}`);\n      }\n\n      dep.dep[depDep.name] = depDep.injected; // set property\n    });\n\n    return dep.dep;\n  }\n}\n"]}